location __PATH__/ {

  alias __FINALPATH__/;

  # Default indexes and catch-all
  index index.php;
  try_files $uri $uri/ __PATH__/index.php?$args;

  # Prevent useless logs
  location = __PATH__/favicon.ico {
      log_not_found off;
      access_log off;
  }
  location = __PATH__/robots.txt {
      allow all;
      log_not_found off;
      access_log off;
  }

  # Make sure files with the following extensions do not get loaded by nginx because nginx would
  # display the source code, and these files can contain PASSWORDS!
  location ~* __PATH__/\.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$|\.php_ {
      deny all;
  }

  ### Retina images handler. Check cookie and looking for file with @2x at the end of name
  location ~* ^__PATH__/(.*)\.(jpg|jpeg|png|gif)$ {
      set $hidpi_uri $1@2x.png;
      if ($http_cookie !~ 'HTTP_IS_RETINA=1') {
        break;
      }
      try_files $hidpi_uri $uri =404;
  }

  location ~*  __PATH__/\.(jpg|jpeg|png|gif|css|js|ico)$ {
    expires max;
    log_not_found off;
  }

  #rewrite for images for retina-displays
  location ~ __PATH__/ {
    if (!-e $request_filename){
      rewrite ^/(.*)\?*$ __PATH__/index.php?_route_=$1 last;
    }
  }

  # Deny access to hidden files and directories
  location ~ ^__PATH__/(.+/|)\.(?!well-known\/) {
    deny all;
  }

  location __PATH__/admin/ {
    location ~ .*\.(php)?$ {
      deny all;
      return 403;
    }
  }

  location ~ __PATH__/(system/logs|resources/download) {
    deny all;
    return 403;
  }

  # Execute and serve PHP files
  location ~ [^/]\.php(/|$) {
    fastcgi_split_path_info ^(.+?\.php)(/.*)$;
    fastcgi_pass unix:/var/run/php/php7.0-fpm-__NAME__.sock;
    fastcgi_index index.php;
    include fastcgi_params;
    fastcgi_param REMOTE_USER $remote_user;
    fastcgi_param PATH_INFO $fastcgi_path_info;
    fastcgi_param SCRIPT_FILENAME $request_filename;
  } 

  # Include SSOWAT user panel.
  include conf.d/yunohost_panel.conf.inc;

}
