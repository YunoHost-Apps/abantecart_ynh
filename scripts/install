#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
admin_name=$YNH_APP_ARG_ADMIN_NAME
admin_pass=$YNH_APP_ARG_ADMIN_PASS
admin_email=$YNH_APP_ARG_ADMIN_EMAIL

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# Check password strength
#=================================================

[[ ${#admin_pass} -gt 8 ]] || ynh_die \
"The password is too weak, it must be longer than 8 characters"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

user="$app"
ynh_app_setting_set "$app" is_public "$is_public"
ynh_app_setting_set "$app" admin_pass "$admin_pass"
ynh_app_setting_set "$app" admin_name "$admin_name"
ynh_app_setting_set "$app" admin_email "$admin_email"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..." --weight=2

db_name=$(ynh_sanitize_dbid $app)
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_name --db_name=$db_name
db_pwd=$(ynh_app_setting_get --app=$app --key=mysqlpwd)

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=7

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# Cleaning
#=================================================

ynh_secure_remove $final_path/tests
ynh_secure_remove $final_path/install.txt
mv $final_path/public_html/* $final_path/
ynh_secure_remove $final_path/public_html

pushd $final_path
chmod 0755 system/config.php
chmod 0755 system/
chmod 0755 system/cache/
chmod 0755 system/logs/
chmod 0755 image/
chmod 0755 image/thumbnails/
chmod 0755 download/
chmod 0755 extensions/
mkdir -p admin/system/backup/
chmod 0755 admin/system/backup/
chmod 0755 resources/
popd

#=================================================
# CLI installation
#=================================================

pushd $final_path/install/
php$phpversion cli_install.php install \
     --db_host=localhost \
     --db_user=$db_name \
     --db_password=$db_pwd \
     --db_name=$db_name \
     --db_driver=amysqli \
     --db_port=3306 \
     --username=$admin_name \
     --password=$admin_pass \
     --email=$admin_email \
     --http_server=https://$domain$path_url \
     --db_prefix=_ac_ \
     --admin_path=ab_admin
popd

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=2

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=2

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# PHP-FPM CONFIGURATION
#=================================================

# Create a dedicated php-fpm config
ynh_add_fpm_config --phpversion=$YNH_PHP_VERSION --package="$extra_php_dependencies"
phpversion=$(ynh_app_setting_get --app=$app --key=phpversion)

#=================================================
# Set permissions
#=================================================

# file owned by www-data before checking permissions
chown -R $app: $final_path 

#=================================================
# SETUP LOGROTATE
#=================================================

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 0 ]
then	# Remove the public access
	ynh_app_setting_delete $app skipped_uris
fi
# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=2

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last

